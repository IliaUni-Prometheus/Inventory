@typeparam T

<table class="table">
    <thead>
        <tr>
            <th scope="col">#</th>
            @foreach (string columnName in ColumnNames)
            {
                <th scope="col">@columnName</th>
            }
        </tr>
    </thead>
    <tbody>
        @{
            int index = (PageSize * CurrentPage) - (PageSize - 1);
        }
        @foreach (T item in Items)
        {
            <tr>
                <th scope="row">@(index++)</th>
                @foreach (string propertyName in PropertyNames)
                {
                    <td>@(typeof(T).GetProperty(propertyName).GetValue(item))</td>
                }
            </tr>
        }
    </tbody>
</table>
<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item @(CurrentPage <= 1 ? "disabled" : String.Empty)"><a class="page-link" href="/@(Route)?page=@(CurrentPage - 1)">Previous</a></li>
        @for (var i = _startPageIndex; i <= _endPageIndex; i++)
        {
            <li class="page-item @(i == CurrentPage ? "active" : String.Empty)"><a class="page-link" href="/@(Route)?page=@(i)">@i</a></li>
        }
        <li class="page-item @(CurrentPage >= PageCount ? "disabled" : String.Empty)"><a class="page-link" href="/@(Route)?page=@(CurrentPage + 1)">Next</a></li>
    </ul>
</nav>